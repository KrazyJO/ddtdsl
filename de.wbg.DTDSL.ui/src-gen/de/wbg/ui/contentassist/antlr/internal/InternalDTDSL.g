/*
* generated by Xtext
*/
grammar InternalDTDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.wbg.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.wbg.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.wbg.services.DTDSLGrammarAccess;

}

@parser::members {
 
 	private DTDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DTDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDTDSL
entryRuleDTDSL 
:
{ before(grammarAccess.getDTDSLRule()); }
	 ruleDTDSL
{ after(grammarAccess.getDTDSLRule()); } 
	 EOF 
;

// Rule DTDSL
ruleDTDSL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDTDSLAccess().getGroup()); }
(rule__DTDSL__Group__0)
{ after(grammarAccess.getDTDSLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleimportStatement
entryRuleimportStatement 
:
{ before(grammarAccess.getImportStatementRule()); }
	 ruleimportStatement
{ after(grammarAccess.getImportStatementRule()); } 
	 EOF 
;

// Rule importStatement
ruleimportStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportStatementAccess().getGroup()); }
(rule__ImportStatement__Group__0)
{ after(grammarAccess.getImportStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStartPoint
entryRuleStartPoint 
:
{ before(grammarAccess.getStartPointRule()); }
	 ruleStartPoint
{ after(grammarAccess.getStartPointRule()); } 
	 EOF 
;

// Rule StartPoint
ruleStartPoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStartPointAccess().getGroup()); }
(rule__StartPoint__Group__0)
{ after(grammarAccess.getStartPointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstract
entryRuleAbstract 
:
{ before(grammarAccess.getAbstractRule()); }
	 ruleAbstract
{ after(grammarAccess.getAbstractRule()); } 
	 EOF 
;

// Rule Abstract
ruleAbstract
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractAccess().getAlternatives()); }
(rule__Abstract__Alternatives)
{ after(grammarAccess.getAbstractAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectDescription
entryRuleObjectDescription 
:
{ before(grammarAccess.getObjectDescriptionRule()); }
	 ruleObjectDescription
{ after(grammarAccess.getObjectDescriptionRule()); } 
	 EOF 
;

// Rule ObjectDescription
ruleObjectDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectDescriptionAccess().getGroup()); }
(rule__ObjectDescription__Group__0)
{ after(grammarAccess.getObjectDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectDescriptionInner
entryRuleObjectDescriptionInner 
:
{ before(grammarAccess.getObjectDescriptionInnerRule()); }
	 ruleObjectDescriptionInner
{ after(grammarAccess.getObjectDescriptionInnerRule()); } 
	 EOF 
;

// Rule ObjectDescriptionInner
ruleObjectDescriptionInner
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getAlternatives()); }
(rule__ObjectDescriptionInner__Alternatives)
{ after(grammarAccess.getObjectDescriptionInnerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectAttribute
entryRuleObjectAttribute 
:
{ before(grammarAccess.getObjectAttributeRule()); }
	 ruleObjectAttribute
{ after(grammarAccess.getObjectAttributeRule()); } 
	 EOF 
;

// Rule ObjectAttribute
ruleObjectAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectAttributeAccess().getGroup()); }
(rule__ObjectAttribute__Group__0)
{ after(grammarAccess.getObjectAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectNext
entryRuleObjectNext 
:
{ before(grammarAccess.getObjectNextRule()); }
	 ruleObjectNext
{ after(grammarAccess.getObjectNextRule()); } 
	 EOF 
;

// Rule ObjectNext
ruleObjectNext
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectNextAccess().getGroup()); }
(rule__ObjectNext__Group__0)
{ after(grammarAccess.getObjectNextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJavaCodeOrID
entryRuleJavaCodeOrID 
:
{ before(grammarAccess.getJavaCodeOrIDRule()); }
	 ruleJavaCodeOrID
{ after(grammarAccess.getJavaCodeOrIDRule()); } 
	 EOF 
;

// Rule JavaCodeOrID
ruleJavaCodeOrID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getAlternatives()); }
(rule__JavaCodeOrID__Alternatives)
{ after(grammarAccess.getJavaCodeOrIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMany
entryRuleMany 
:
{ before(grammarAccess.getManyRule()); }
	 ruleMany
{ after(grammarAccess.getManyRule()); } 
	 EOF 
;

// Rule Many
ruleMany
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getManyAccess().getGroup()); }
(rule__Many__Group__0)
{ after(grammarAccess.getManyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChoice
entryRuleChoice 
:
{ before(grammarAccess.getChoiceRule()); }
	 ruleChoice
{ after(grammarAccess.getChoiceRule()); } 
	 EOF 
;

// Rule Choice
ruleChoice
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChoiceAccess().getGroup()); }
(rule__Choice__Group__0)
{ after(grammarAccess.getChoiceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectMaybe
entryRuleObjectMaybe 
:
{ before(grammarAccess.getObjectMaybeRule()); }
	 ruleObjectMaybe
{ after(grammarAccess.getObjectMaybeRule()); } 
	 EOF 
;

// Rule ObjectMaybe
ruleObjectMaybe
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectMaybeAccess().getAlternatives()); }
(rule__ObjectMaybe__Alternatives)
{ after(grammarAccess.getObjectMaybeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyword
entryRuleKeyword 
:
{ before(grammarAccess.getKeywordRule()); }
	 ruleKeyword
{ after(grammarAccess.getKeywordRule()); } 
	 EOF 
;

// Rule Keyword
ruleKeyword
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordAccess().getAlternatives()); }
(rule__Keyword__Alternatives)
{ after(grammarAccess.getKeywordAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__DTDSL__TypeAlternatives_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getTypeJavaObjectKeyword_6_0_0()); }

	'javaObject' 

{ after(grammarAccess.getDTDSLAccess().getTypeJavaObjectKeyword_6_0_0()); }
)

    |(
{ before(grammarAccess.getDTDSLAccess().getTypeStringKeyword_6_0_1()); }

	'string' 

{ after(grammarAccess.getDTDSLAccess().getTypeStringKeyword_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abstract__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractAccess().getObjectDescriptionParserRuleCall_0()); }
	ruleObjectDescription
{ after(grammarAccess.getAbstractAccess().getObjectDescriptionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractAccess().getChoiceParserRuleCall_1()); }
	ruleChoice
{ after(grammarAccess.getAbstractAccess().getChoiceParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAbstractAccess().getManyParserRuleCall_2()); }
	ruleMany
{ after(grammarAccess.getAbstractAccess().getManyParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescriptionInner__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getObjectAttributeParserRuleCall_0()); }
	ruleObjectAttribute
{ after(grammarAccess.getObjectDescriptionInnerAccess().getObjectAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getObjectNextParserRuleCall_1()); }
	ruleObjectNext
{ after(grammarAccess.getObjectDescriptionInnerAccess().getObjectNextParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getObjectMaybeParserRuleCall_2()); }
	ruleObjectMaybe
{ after(grammarAccess.getObjectDescriptionInnerAccess().getObjectMaybeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getGroup_3_0()); }
(rule__ObjectAttribute__Group_3_0__0)
{ after(grammarAccess.getObjectAttributeAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getObjectAttributeAccess().getInnerAssignment_3_1()); }
(rule__ObjectAttribute__InnerAssignment_3_1)
{ after(grammarAccess.getObjectAttributeAccess().getInnerAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getGroup_0()); }
(rule__JavaCodeOrID__Group_0__0)
{ after(grammarAccess.getJavaCodeOrIDAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getJavaCodeOrIDAccess().getIdAssignment_1()); }
(rule__JavaCodeOrID__IdAssignment_1)
{ after(grammarAccess.getJavaCodeOrIDAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getIntKeyword_0()); }

	'int' 

{ after(grammarAccess.getTypeAccess().getIntKeyword_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getFloatKeyword_1()); }

	'float' 

{ after(grammarAccess.getTypeAccess().getFloatKeyword_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getStringKeyword_2()); }

	'String' 

{ after(grammarAccess.getTypeAccess().getStringKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getGroup_0()); }
(rule__ObjectMaybe__Group_0__0)
{ after(grammarAccess.getObjectMaybeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getObjectMaybeAccess().getGroup_1()); }
(rule__ObjectMaybe__Group_1__0)
{ after(grammarAccess.getObjectMaybeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNameAssignment_0()); }
(rule__Keyword__NameAssignment_0)
{ after(grammarAccess.getKeywordAccess().getNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getKeywordAccess().getNameAssignment_1()); }
(rule__Keyword__NameAssignment_1)
{ after(grammarAccess.getKeywordAccess().getNameAssignment_1()); }
)

    |(
{ before(grammarAccess.getKeywordAccess().getNameAssignment_2()); }
(rule__Keyword__NameAssignment_2)
{ after(grammarAccess.getKeywordAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DTDSL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__0__Impl
	rule__DTDSL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getParserNameKeyword_0()); }

	'parserName' 

{ after(grammarAccess.getDTDSLAccess().getParserNameKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__1__Impl
	rule__DTDSL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDTDSLAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__2__Impl
	rule__DTDSL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getParserNameAssignment_2()); }
(rule__DTDSL__ParserNameAssignment_2)
{ after(grammarAccess.getDTDSLAccess().getParserNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__3__Impl
	rule__DTDSL__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getDTDSLAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__4__Impl
	rule__DTDSL__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getParserTypeKeyword_4()); }

	'parserType' 

{ after(grammarAccess.getDTDSLAccess().getParserTypeKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__5__Impl
	rule__DTDSL__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getDTDSLAccess().getEqualsSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__6__Impl
	rule__DTDSL__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getTypeAssignment_6()); }
(rule__DTDSL__TypeAssignment_6)
{ after(grammarAccess.getDTDSLAccess().getTypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__7__Impl
	rule__DTDSL__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getDTDSLAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__8__Impl
	rule__DTDSL__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getImportsAssignment_8()); }
(rule__DTDSL__ImportsAssignment_8)*
{ after(grammarAccess.getDTDSLAccess().getImportsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__9__Impl
	rule__DTDSL__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getObjDescriptionAssignment_9()); }
(rule__DTDSL__ObjDescriptionAssignment_9)*
{ after(grammarAccess.getDTDSLAccess().getObjDescriptionAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getStartAssignment_10()); }
(rule__DTDSL__StartAssignment_10)
{ after(grammarAccess.getDTDSLAccess().getStartAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__ImportStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__0__Impl
	rule__ImportStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportStatementAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__1__Impl
	rule__ImportStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportClassAssignment_1()); }
(rule__ImportStatement__ImportClassAssignment_1)
{ after(grammarAccess.getImportStatementAccess().getImportClassAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StartPoint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartPoint__Group__0__Impl
	rule__StartPoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getBeginWithKeyword_0()); }

	'beginWith' 

{ after(grammarAccess.getStartPointAccess().getBeginWithKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartPoint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartPoint__Group__1__Impl
	rule__StartPoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getStartPointAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartPoint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartPoint__Group__2__Impl
	rule__StartPoint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getBeginAssignment_2()); }
(rule__StartPoint__BeginAssignment_2)
{ after(grammarAccess.getStartPointAccess().getBeginAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartPoint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartPoint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getStartPointAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ObjectDescription__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescription__Group__0__Impl
	rule__ObjectDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getNameAssignment_0()); }
(rule__ObjectDescription__NameAssignment_0)
{ after(grammarAccess.getObjectDescriptionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDescription__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescription__Group__1__Impl
	rule__ObjectDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getObjectDescriptionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDescription__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescription__Group__2__Impl
	rule__ObjectDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getObjectDescriptionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDescription__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescription__Group__3__Impl
	rule__ObjectDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getDescriptionAssignment_3()); }
(rule__ObjectDescription__DescriptionAssignment_3)*
{ after(grammarAccess.getObjectDescriptionAccess().getDescriptionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDescription__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescription__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getObjectDescriptionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ObjectAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group__0__Impl
	rule__ObjectAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getHasAttributeKeyword_0()); }

	'hasAttribute' 

{ after(grammarAccess.getObjectAttributeAccess().getHasAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group__1__Impl
	rule__ObjectAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getAttributesAssignment_1()); }
(rule__ObjectAttribute__AttributesAssignment_1)
{ after(grammarAccess.getObjectAttributeAccess().getAttributesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group__2__Impl
	rule__ObjectAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getOfTypeKeyword_2()); }

	'ofType' 

{ after(grammarAccess.getObjectAttributeAccess().getOfTypeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group__3__Impl
	rule__ObjectAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getAlternatives_3()); }
(rule__ObjectAttribute__Alternatives_3)
{ after(grammarAccess.getObjectAttributeAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getObjectAttributeAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ObjectAttribute__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group_3_0__0__Impl
	rule__ObjectAttribute__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getTypesAssignment_3_0_0()); }
(rule__ObjectAttribute__TypesAssignment_3_0_0)
{ after(grammarAccess.getObjectAttributeAccess().getTypesAssignment_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectAttribute__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group_3_0__1__Impl
	rule__ObjectAttribute__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getAsKeyword_3_0_1()); }

	'as' 

{ after(grammarAccess.getObjectAttributeAccess().getAsKeyword_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectAttribute__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getKeywordAssignment_3_0_2()); }
(rule__ObjectAttribute__KeywordAssignment_3_0_2)
{ after(grammarAccess.getObjectAttributeAccess().getKeywordAssignment_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ObjectNext__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNext__Group__0__Impl
	rule__ObjectNext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getHasNextKeyword_0()); }

	'hasNext' 

{ after(grammarAccess.getObjectNextAccess().getHasNextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectNext__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNext__Group__1__Impl
	rule__ObjectNext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getAttributeAssignment_1()); }
(rule__ObjectNext__AttributeAssignment_1)
{ after(grammarAccess.getObjectNextAccess().getAttributeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectNext__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNext__Group__2__Impl
	rule__ObjectNext__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getObjectNextAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectNext__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNext__Group__3__Impl
	rule__ObjectNext__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getObjectDesriptionAssignment_3()); }
(rule__ObjectNext__ObjectDesriptionAssignment_3)
{ after(grammarAccess.getObjectNextAccess().getObjectDesriptionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectNext__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNext__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getObjectNextAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__JavaCodeOrID__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaCodeOrID__Group_0__0__Impl
	rule__JavaCodeOrID__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getJavaKeyword_0_0()); }

	'java' 

{ after(grammarAccess.getJavaCodeOrIDAccess().getJavaKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaCodeOrID__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaCodeOrID__Group_0__1__Impl
	rule__JavaCodeOrID__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getJavaCodeOrIDAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaCodeOrID__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaCodeOrID__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getCodeAssignment_0_2()); }
(rule__JavaCodeOrID__CodeAssignment_0_2)
{ after(grammarAccess.getJavaCodeOrIDAccess().getCodeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Many__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Many__Group__0__Impl
	rule__Many__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Many__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyAccess().getManyAction_0()); }
(

)
{ after(grammarAccess.getManyAccess().getManyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Many__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Many__Group__1__Impl
	rule__Many__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Many__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getManyAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Many__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Many__Group__2__Impl
	rule__Many__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Many__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyAccess().getDescriptionAssignment_2()); }
(rule__Many__DescriptionAssignment_2)
{ after(grammarAccess.getManyAccess().getDescriptionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Many__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Many__Group__3__Impl
	rule__Many__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Many__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getManyAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Many__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Many__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Many__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyAccess().getAsteriskKeyword_4()); }

	'*' 

{ after(grammarAccess.getManyAccess().getAsteriskKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Choice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__0__Impl
	rule__Choice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getChoiceAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Choice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__1__Impl
	rule__Choice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getOptionsAssignment_1()); }
(rule__Choice__OptionsAssignment_1)
{ after(grammarAccess.getChoiceAccess().getOptionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Choice__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__2__Impl
	rule__Choice__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getGroup_2()); }
(rule__Choice__Group_2__0)*
{ after(grammarAccess.getChoiceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Choice__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getChoiceAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Choice__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group_2__0__Impl
	rule__Choice__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getVerticalLineKeyword_2_0()); }

	'|' 

{ after(grammarAccess.getChoiceAccess().getVerticalLineKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Choice__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getOptionsAssignment_2_1()); }
(rule__Choice__OptionsAssignment_2_1)
{ after(grammarAccess.getChoiceAccess().getOptionsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectMaybe__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMaybe__Group_0__0__Impl
	rule__ObjectMaybe__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getObjectMaybeAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectMaybe__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMaybe__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getObjectAssignment_0_1()); }
(rule__ObjectMaybe__ObjectAssignment_0_1)
{ after(grammarAccess.getObjectMaybeAccess().getObjectAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectMaybe__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMaybe__Group_1__0__Impl
	rule__ObjectMaybe__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getIdAssignment_1_0()); }
(rule__ObjectMaybe__IdAssignment_1_0)
{ after(grammarAccess.getObjectMaybeAccess().getIdAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectMaybe__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMaybe__Group_1__1__Impl
	rule__ObjectMaybe__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getRightParenthesisKeyword_1_1()); }

	')' 

{ after(grammarAccess.getObjectMaybeAccess().getRightParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectMaybe__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMaybe__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getQuestionMarkKeyword_1_2()); }

	'?' 

{ after(grammarAccess.getObjectMaybeAccess().getQuestionMarkKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__DTDSL__ParserNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getParserNameSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getDTDSLAccess().getParserNameSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__TypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getTypeAlternatives_6_0()); }
(rule__DTDSL__TypeAlternatives_6_0)
{ after(grammarAccess.getDTDSLAccess().getTypeAlternatives_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__ImportsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getImportsImportStatementParserRuleCall_8_0()); }
	ruleimportStatement{ after(grammarAccess.getDTDSLAccess().getImportsImportStatementParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__ObjDescriptionAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getObjDescriptionAbstractParserRuleCall_9_0()); }
	ruleAbstract{ after(grammarAccess.getDTDSLAccess().getObjDescriptionAbstractParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__StartAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getStartStartPointParserRuleCall_10_0()); }
	ruleStartPoint{ after(grammarAccess.getDTDSLAccess().getStartStartPointParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__ImportClassAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportClassIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getImportStatementAccess().getImportClassIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__BeginAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getBeginObjectDescriptionCrossReference_2_0()); }
(
{ before(grammarAccess.getStartPointAccess().getBeginObjectDescriptionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getStartPointAccess().getBeginObjectDescriptionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getStartPointAccess().getBeginObjectDescriptionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getObjectDescriptionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__DescriptionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getDescriptionObjectDescriptionInnerParserRuleCall_3_0()); }
	ruleObjectDescriptionInner{ after(grammarAccess.getObjectDescriptionAccess().getDescriptionObjectDescriptionInnerParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__AttributesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getAttributesIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getObjectAttributeAccess().getAttributesIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__TypesAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getTypesTypeParserRuleCall_3_0_0_0()); }
	ruleType{ after(grammarAccess.getObjectAttributeAccess().getTypesTypeParserRuleCall_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__KeywordAssignment_3_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getKeywordKeywordParserRuleCall_3_0_2_0()); }
	ruleKeyword{ after(grammarAccess.getObjectAttributeAccess().getKeywordKeywordParserRuleCall_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__InnerAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getInnerObjectDescriptionCrossReference_3_1_0()); }
(
{ before(grammarAccess.getObjectAttributeAccess().getInnerObjectDescriptionIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getObjectAttributeAccess().getInnerObjectDescriptionIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getObjectAttributeAccess().getInnerObjectDescriptionCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__AttributeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getAttributeJavaCodeOrIDParserRuleCall_1_0()); }
	ruleJavaCodeOrID{ after(grammarAccess.getObjectNextAccess().getAttributeJavaCodeOrIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__ObjectDesriptionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getObjectDesriptionObjectDescriptionCrossReference_3_0()); }
(
{ before(grammarAccess.getObjectNextAccess().getObjectDesriptionObjectDescriptionIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getObjectNextAccess().getObjectDesriptionObjectDescriptionIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getObjectNextAccess().getObjectDesriptionObjectDescriptionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__CodeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getCodeSTRINGTerminalRuleCall_0_2_0()); }
	RULE_STRING{ after(grammarAccess.getJavaCodeOrIDAccess().getCodeSTRINGTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getJavaCodeOrIDAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Many__DescriptionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getManyAccess().getDescriptionObjectDescriptionInnerParserRuleCall_2_0()); }
	ruleObjectDescriptionInner{ after(grammarAccess.getManyAccess().getDescriptionObjectDescriptionInnerParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__OptionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getOptionsKeywordParserRuleCall_1_0()); }
	ruleKeyword{ after(grammarAccess.getChoiceAccess().getOptionsKeywordParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__OptionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getOptionsKeywordParserRuleCall_2_1_0()); }
	ruleKeyword{ after(grammarAccess.getChoiceAccess().getOptionsKeywordParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__ObjectAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getObjectAbstractParserRuleCall_0_1_0()); }
	ruleAbstract{ after(grammarAccess.getObjectMaybeAccess().getObjectAbstractParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__IdAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getIdObjectDescriptionCrossReference_1_0_0()); }
(
{ before(grammarAccess.getObjectMaybeAccess().getIdObjectDescriptionIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getObjectMaybeAccess().getIdObjectDescriptionIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getObjectMaybeAccess().getIdObjectDescriptionCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNameKeyKeyword_0_0()); }
(
{ before(grammarAccess.getKeywordAccess().getNameKeyKeyword_0_0()); }

	'Key' 

{ after(grammarAccess.getKeywordAccess().getNameKeyKeyword_0_0()); }
)

{ after(grammarAccess.getKeywordAccess().getNameKeyKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNameValueKeyword_1_0()); }
(
{ before(grammarAccess.getKeywordAccess().getNameValueKeyword_1_0()); }

	'Value' 

{ after(grammarAccess.getKeywordAccess().getNameValueKeyword_1_0()); }
)

{ after(grammarAccess.getKeywordAccess().getNameValueKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getKeywordAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


