/*
* generated by Xtext
*/
grammar InternalDTDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.wbg.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.wbg.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.wbg.services.DTDSLGrammarAccess;

}

@parser::members {
 
 	private DTDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DTDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDTDSL
entryRuleDTDSL 
:
{ before(grammarAccess.getDTDSLRule()); }
	 ruleDTDSL
{ after(grammarAccess.getDTDSLRule()); } 
	 EOF 
;

// Rule DTDSL
ruleDTDSL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDTDSLAccess().getGroup()); }
(rule__DTDSL__Group__0)
{ after(grammarAccess.getDTDSLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStartPoint
entryRuleStartPoint 
:
{ before(grammarAccess.getStartPointRule()); }
	 ruleStartPoint
{ after(grammarAccess.getStartPointRule()); } 
	 EOF 
;

// Rule StartPoint
ruleStartPoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStartPointAccess().getAlternatives()); }
(rule__StartPoint__Alternatives)
{ after(grammarAccess.getStartPointAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstract
entryRuleAbstract 
:
{ before(grammarAccess.getAbstractRule()); }
	 ruleAbstract
{ after(grammarAccess.getAbstractRule()); } 
	 EOF 
;

// Rule Abstract
ruleAbstract
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractAccess().getAlternatives()); }
(rule__Abstract__Alternatives)
{ after(grammarAccess.getAbstractAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringDescription
entryRuleStringDescription 
:
{ before(grammarAccess.getStringDescriptionRule()); }
	 ruleStringDescription
{ after(grammarAccess.getStringDescriptionRule()); } 
	 EOF 
;

// Rule StringDescription
ruleStringDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringDescriptionAccess().getGroup()); }
(rule__StringDescription__Group__0)
{ after(grammarAccess.getStringDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringDescriptionInner
entryRuleStringDescriptionInner 
:
{ before(grammarAccess.getStringDescriptionInnerRule()); }
	 ruleStringDescriptionInner
{ after(grammarAccess.getStringDescriptionInnerRule()); } 
	 EOF 
;

// Rule StringDescriptionInner
ruleStringDescriptionInner
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringDescriptionInnerAccess().getAlternatives()); }
(rule__StringDescriptionInner__Alternatives)
{ after(grammarAccess.getStringDescriptionInnerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringOverRead
entryRuleStringOverRead 
:
{ before(grammarAccess.getStringOverReadRule()); }
	 ruleStringOverRead
{ after(grammarAccess.getStringOverReadRule()); } 
	 EOF 
;

// Rule StringOverRead
ruleStringOverRead
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringOverReadAccess().getOverReadAssignment()); }
(rule__StringOverRead__OverReadAssignment)
{ after(grammarAccess.getStringOverReadAccess().getOverReadAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringKey
entryRuleStringKey 
:
{ before(grammarAccess.getStringKeyRule()); }
	 ruleStringKey
{ after(grammarAccess.getStringKeyRule()); } 
	 EOF 
;

// Rule StringKey
ruleStringKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringKeyAccess().getGroup()); }
(rule__StringKey__Group__0)
{ after(grammarAccess.getStringKeyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getGroup()); }
(rule__StringValue__Group__0)
{ after(grammarAccess.getStringValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringOr
entryRuleStringOr 
:
{ before(grammarAccess.getStringOrRule()); }
	 ruleStringOr
{ after(grammarAccess.getStringOrRule()); } 
	 EOF 
;

// Rule StringOr
ruleStringOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringOrAccess().getGroup()); }
(rule__StringOr__Group__0)
{ after(grammarAccess.getStringOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringDescriptionInVariable
entryRuleStringDescriptionInVariable 
:
{ before(grammarAccess.getStringDescriptionInVariableRule()); }
	 ruleStringDescriptionInVariable
{ after(grammarAccess.getStringDescriptionInVariableRule()); } 
	 EOF 
;

// Rule StringDescriptionInVariable
ruleStringDescriptionInVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringDescriptionInVariableAccess().getGroup()); }
(rule__StringDescriptionInVariable__Group__0)
{ after(grammarAccess.getStringDescriptionInVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringComplex
entryRuleStringComplex 
:
{ before(grammarAccess.getStringComplexRule()); }
	 ruleStringComplex
{ after(grammarAccess.getStringComplexRule()); } 
	 EOF 
;

// Rule StringComplex
ruleStringComplex
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringComplexAccess().getGroup()); }
(rule__StringComplex__Group__0)
{ after(grammarAccess.getStringComplexAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectDescription
entryRuleObjectDescription 
:
{ before(grammarAccess.getObjectDescriptionRule()); }
	 ruleObjectDescription
{ after(grammarAccess.getObjectDescriptionRule()); } 
	 EOF 
;

// Rule ObjectDescription
ruleObjectDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectDescriptionAccess().getGroup()); }
(rule__ObjectDescription__Group__0)
{ after(grammarAccess.getObjectDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectDescriptionInner
entryRuleObjectDescriptionInner 
:
{ before(grammarAccess.getObjectDescriptionInnerRule()); }
	 ruleObjectDescriptionInner
{ after(grammarAccess.getObjectDescriptionInnerRule()); } 
	 EOF 
;

// Rule ObjectDescriptionInner
ruleObjectDescriptionInner
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getGroup()); }
(rule__ObjectDescriptionInner__Group__0)
{ after(grammarAccess.getObjectDescriptionInnerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectAttribute
entryRuleObjectAttribute 
:
{ before(grammarAccess.getObjectAttributeRule()); }
	 ruleObjectAttribute
{ after(grammarAccess.getObjectAttributeRule()); } 
	 EOF 
;

// Rule ObjectAttribute
ruleObjectAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectAttributeAccess().getGroup()); }
(rule__ObjectAttribute__Group__0)
{ after(grammarAccess.getObjectAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectNode
entryRuleObjectNode 
:
{ before(grammarAccess.getObjectNodeRule()); }
	 ruleObjectNode
{ after(grammarAccess.getObjectNodeRule()); } 
	 EOF 
;

// Rule ObjectNode
ruleObjectNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectNodeAccess().getGroup()); }
(rule__ObjectNode__Group__0)
{ after(grammarAccess.getObjectNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectNext
entryRuleObjectNext 
:
{ before(grammarAccess.getObjectNextRule()); }
	 ruleObjectNext
{ after(grammarAccess.getObjectNextRule()); } 
	 EOF 
;

// Rule ObjectNext
ruleObjectNext
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectNextAccess().getGroup()); }
(rule__ObjectNext__Group__0)
{ after(grammarAccess.getObjectNextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJavaCodeOrID
entryRuleJavaCodeOrID 
:
{ before(grammarAccess.getJavaCodeOrIDRule()); }
	 ruleJavaCodeOrID
{ after(grammarAccess.getJavaCodeOrIDRule()); } 
	 EOF 
;

// Rule JavaCodeOrID
ruleJavaCodeOrID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getAlternatives()); }
(rule__JavaCodeOrID__Alternatives)
{ after(grammarAccess.getJavaCodeOrIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectMany
entryRuleObjectMany 
:
{ before(grammarAccess.getObjectManyRule()); }
	 ruleObjectMany
{ after(grammarAccess.getObjectManyRule()); } 
	 EOF 
;

// Rule ObjectMany
ruleObjectMany
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectManyAccess().getGroup()); }
(rule__ObjectMany__Group__0)
{ after(grammarAccess.getObjectManyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectChoice
entryRuleObjectChoice 
:
{ before(grammarAccess.getObjectChoiceRule()); }
	 ruleObjectChoice
{ after(grammarAccess.getObjectChoiceRule()); } 
	 EOF 
;

// Rule ObjectChoice
ruleObjectChoice
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectChoiceAccess().getGroup()); }
(rule__ObjectChoice__Group__0)
{ after(grammarAccess.getObjectChoiceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectMaybe
entryRuleObjectMaybe 
:
{ before(grammarAccess.getObjectMaybeRule()); }
	 ruleObjectMaybe
{ after(grammarAccess.getObjectMaybeRule()); } 
	 EOF 
;

// Rule ObjectMaybe
ruleObjectMaybe
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectMaybeAccess().getAlternatives()); }
(rule__ObjectMaybe__Alternatives)
{ after(grammarAccess.getObjectMaybeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectMaybeInner
entryRuleObjectMaybeInner 
:
{ before(grammarAccess.getObjectMaybeInnerRule()); }
	 ruleObjectMaybeInner
{ after(grammarAccess.getObjectMaybeInnerRule()); } 
	 EOF 
;

// Rule ObjectMaybeInner
ruleObjectMaybeInner
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectMaybeInnerAccess().getAlternatives()); }
(rule__ObjectMaybeInner__Alternatives)
{ after(grammarAccess.getObjectMaybeInnerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__StartPoint__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getGroup_0()); }
(rule__StartPoint__Group_0__0)
{ after(grammarAccess.getStartPointAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStartPointAccess().getGroup_1()); }
(rule__StartPoint__Group_1__0)
{ after(grammarAccess.getStartPointAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abstract__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractAccess().getObjectDescriptionParserRuleCall_0()); }
	ruleObjectDescription
{ after(grammarAccess.getAbstractAccess().getObjectDescriptionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractAccess().getStringDescriptionParserRuleCall_1()); }
	ruleStringDescription
{ after(grammarAccess.getAbstractAccess().getStringDescriptionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescriptionInner__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionInnerAccess().getStringOverReadParserRuleCall_0()); }
	ruleStringOverRead
{ after(grammarAccess.getStringDescriptionInnerAccess().getStringOverReadParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStringDescriptionInnerAccess().getStringKeyParserRuleCall_1()); }
	ruleStringKey
{ after(grammarAccess.getStringDescriptionInnerAccess().getStringKeyParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStringDescriptionInnerAccess().getStringValueParserRuleCall_2()); }
	ruleStringValue
{ after(grammarAccess.getStringDescriptionInnerAccess().getStringValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStringDescriptionInnerAccess().getKeyRefAssignment_3()); }
(rule__StringDescriptionInner__KeyRefAssignment_3)
{ after(grammarAccess.getStringDescriptionInnerAccess().getKeyRefAssignment_3()); }
)

    |(
{ before(grammarAccess.getStringDescriptionInnerAccess().getStringComplexParserRuleCall_4()); }
	ruleStringComplex
{ after(grammarAccess.getStringDescriptionInnerAccess().getStringComplexParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStringDescriptionInnerAccess().getStringOrParserRuleCall_5()); }
	ruleStringOr
{ after(grammarAccess.getStringDescriptionInnerAccess().getStringOrParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStringDescriptionInnerAccess().getStringDescriptionInVariableParserRuleCall_6()); }
	ruleStringDescriptionInVariable
{ after(grammarAccess.getStringDescriptionInnerAccess().getStringDescriptionInVariableParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringComplex__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringComplexAccess().getManyAssignment_3_0()); }
(rule__StringComplex__ManyAssignment_3_0)
{ after(grammarAccess.getStringComplexAccess().getManyAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getStringComplexAccess().getMaybeAssignment_3_1()); }
(rule__StringComplex__MaybeAssignment_3_1)
{ after(grammarAccess.getStringComplexAccess().getMaybeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescriptionInner__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getObjectNodeParserRuleCall_0_0()); }
	ruleObjectNode
{ after(grammarAccess.getObjectDescriptionInnerAccess().getObjectNodeParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getObjectAttributeParserRuleCall_0_1()); }
	ruleObjectAttribute
{ after(grammarAccess.getObjectDescriptionInnerAccess().getObjectAttributeParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getObjectNextParserRuleCall_0_2()); }
	ruleObjectNext
{ after(grammarAccess.getObjectDescriptionInnerAccess().getObjectNextParserRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getObjectMaybeParserRuleCall_0_3()); }
	ruleObjectMaybe
{ after(grammarAccess.getObjectDescriptionInnerAccess().getObjectMaybeParserRuleCall_0_3()); }
)

    |(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getObjectManyParserRuleCall_0_4()); }
	ruleObjectMany
{ after(grammarAccess.getObjectDescriptionInnerAccess().getObjectManyParserRuleCall_0_4()); }
)

    |(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getObjectChoiceParserRuleCall_0_5()); }
	ruleObjectChoice
{ after(grammarAccess.getObjectDescriptionInnerAccess().getObjectChoiceParserRuleCall_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getGroup_0()); }
(rule__JavaCodeOrID__Group_0__0)
{ after(grammarAccess.getJavaCodeOrIDAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getJavaCodeOrIDAccess().getIdAssignment_1()); }
(rule__JavaCodeOrID__IdAssignment_1)
{ after(grammarAccess.getJavaCodeOrIDAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBooleanKeyword_0()); }

	'boolean' 

{ after(grammarAccess.getTypeAccess().getBooleanKeyword_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getShortKeyword_1()); }

	'short' 

{ after(grammarAccess.getTypeAccess().getShortKeyword_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getIntKeyword_2()); }

	'int' 

{ after(grammarAccess.getTypeAccess().getIntKeyword_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getLongKeyword_3()); }

	'long' 

{ after(grammarAccess.getTypeAccess().getLongKeyword_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getFloatKeyword_4()); }

	'float' 

{ after(grammarAccess.getTypeAccess().getFloatKeyword_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getDoubleKeyword_5()); }

	'double' 

{ after(grammarAccess.getTypeAccess().getDoubleKeyword_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getCharKeyword_6()); }

	'char' 

{ after(grammarAccess.getTypeAccess().getCharKeyword_6()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getStringKeyword_7()); }

	'String' 

{ after(grammarAccess.getTypeAccess().getStringKeyword_7()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getByteKeyword_8()); }

	'byte' 

{ after(grammarAccess.getTypeAccess().getByteKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getOptionAssignment_0()); }
(rule__ObjectMaybe__OptionAssignment_0)
{ after(grammarAccess.getObjectMaybeAccess().getOptionAssignment_0()); }
)

    |(
{ before(grammarAccess.getObjectMaybeAccess().getGroup_1()); }
(rule__ObjectMaybe__Group_1__0)
{ after(grammarAccess.getObjectMaybeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybeInner__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeInnerAccess().getObjectNextParserRuleCall_0()); }
	ruleObjectNext
{ after(grammarAccess.getObjectMaybeInnerAccess().getObjectNextParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getObjectMaybeInnerAccess().getObjectNodeParserRuleCall_1()); }
	ruleObjectNode
{ after(grammarAccess.getObjectMaybeInnerAccess().getObjectNodeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getObjectMaybeInnerAccess().getObjectAttributeParserRuleCall_2()); }
	ruleObjectAttribute
{ after(grammarAccess.getObjectMaybeInnerAccess().getObjectAttributeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DTDSL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__0__Impl
	rule__DTDSL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getParserNameKeyword_0()); }

	'parserName' 

{ after(grammarAccess.getDTDSLAccess().getParserNameKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__1__Impl
	rule__DTDSL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDTDSLAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__2__Impl
	rule__DTDSL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getParserNameAssignment_2()); }
(rule__DTDSL__ParserNameAssignment_2)
{ after(grammarAccess.getDTDSLAccess().getParserNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__3__Impl
	rule__DTDSL__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getDTDSLAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__4__Impl
	rule__DTDSL__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getObjDescriptionAssignment_4()); }
(rule__DTDSL__ObjDescriptionAssignment_4)*
{ after(grammarAccess.getDTDSLAccess().getObjDescriptionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DTDSL__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DTDSL__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getStartAssignment_5()); }
(rule__DTDSL__StartAssignment_5)
{ after(grammarAccess.getDTDSLAccess().getStartAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StartPoint__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartPoint__Group_0__0__Impl
	rule__StartPoint__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getBeginWithKeyword_0_0()); }

	'beginWith' 

{ after(grammarAccess.getStartPointAccess().getBeginWithKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartPoint__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartPoint__Group_0__1__Impl
	rule__StartPoint__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getEqualsSignKeyword_0_1()); }

	'=' 

{ after(grammarAccess.getStartPointAccess().getEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartPoint__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartPoint__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getBeginAssignment_0_2()); }
(rule__StartPoint__BeginAssignment_0_2)
{ after(grammarAccess.getStartPointAccess().getBeginAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StartPoint__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartPoint__Group_1__0__Impl
	rule__StartPoint__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getBeginAssignment_1_0()); }
(rule__StartPoint__BeginAssignment_1_0)
{ after(grammarAccess.getStartPointAccess().getBeginAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartPoint__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartPoint__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getStartPointAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringDescription__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDescription__Group__0__Impl
	rule__StringDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescription__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionAccess().getStringKeyword_0()); }

	'String' 

{ after(grammarAccess.getStringDescriptionAccess().getStringKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDescription__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDescription__Group__1__Impl
	rule__StringDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescription__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionAccess().getNameAssignment_1()); }
(rule__StringDescription__NameAssignment_1)
{ after(grammarAccess.getStringDescriptionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDescription__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDescription__Group__2__Impl
	rule__StringDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescription__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getStringDescriptionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDescription__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDescription__Group__3__Impl
	rule__StringDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescription__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getStringDescriptionAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDescription__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDescription__Group__4__Impl
	rule__StringDescription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescription__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionAccess().getDescriptionAssignment_4()); }
(rule__StringDescription__DescriptionAssignment_4)*
{ after(grammarAccess.getStringDescriptionAccess().getDescriptionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDescription__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDescription__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescription__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getStringDescriptionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StringKey__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringKey__Group__0__Impl
	rule__StringKey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringKey__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringKeyAccess().getStringKeyAction_0()); }
(

)
{ after(grammarAccess.getStringKeyAccess().getStringKeyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringKey__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringKey__Group__1__Impl
	rule__StringKey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringKey__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringKeyAccess().getGroup_1()); }
(rule__StringKey__Group_1__0)?
{ after(grammarAccess.getStringKeyAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringKey__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringKey__Group__2__Impl
	rule__StringKey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringKey__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringKeyAccess().getKeyKeyword_2()); }

	'Key' 

{ after(grammarAccess.getStringKeyAccess().getKeyKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringKey__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringKey__Group__3__Impl
	rule__StringKey__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringKey__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringKeyAccess().getOfTypeKeyword_3()); }

	'ofType' 

{ after(grammarAccess.getStringKeyAccess().getOfTypeKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringKey__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringKey__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringKey__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringKeyAccess().getTypeAssignment_4()); }
(rule__StringKey__TypeAssignment_4)
{ after(grammarAccess.getStringKeyAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StringKey__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringKey__Group_1__0__Impl
	rule__StringKey__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringKey__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringKeyAccess().getNameAssignment_1_0()); }
(rule__StringKey__NameAssignment_1_0)
{ after(grammarAccess.getStringKeyAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringKey__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringKey__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringKey__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringKeyAccess().getEqualsSignKeyword_1_1()); }

	'=' 

{ after(grammarAccess.getStringKeyAccess().getEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringValue__Group__0__Impl
	rule__StringValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getStringValueAction_0()); }
(

)
{ after(grammarAccess.getStringValueAccess().getStringValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringValue__Group__1__Impl
	rule__StringValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getGroup_1()); }
(rule__StringValue__Group_1__0)?
{ after(grammarAccess.getStringValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringValue__Group__2__Impl
	rule__StringValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueKeyword_2()); }

	'Value' 

{ after(grammarAccess.getStringValueAccess().getValueKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringValue__Group__3__Impl
	rule__StringValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getOfTypeKeyword_3()); }

	'ofType' 

{ after(grammarAccess.getStringValueAccess().getOfTypeKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringValue__Group__4__Impl
	rule__StringValue__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getTypeAssignment_4()); }
(rule__StringValue__TypeAssignment_4)
{ after(grammarAccess.getStringValueAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringValue__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringValue__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getGroup_5()); }
(rule__StringValue__Group_5__0)?
{ after(grammarAccess.getStringValueAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StringValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringValue__Group_1__0__Impl
	rule__StringValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getNameAssignment_1_0()); }
(rule__StringValue__NameAssignment_1_0)
{ after(grammarAccess.getStringValueAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getEqualsSignKeyword_1_1()); }

	'=' 

{ after(grammarAccess.getStringValueAccess().getEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringValue__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringValue__Group_5__0__Impl
	rule__StringValue__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getToKeyword_5_0()); }

	'to' 

{ after(grammarAccess.getStringValueAccess().getToKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringValue__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringValue__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getToKeyAssignment_5_1()); }
(rule__StringValue__ToKeyAssignment_5_1)
{ after(grammarAccess.getStringValueAccess().getToKeyAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringOr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringOr__Group__0__Impl
	rule__StringOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOrAccess().getStringOrAction_0()); }
(

)
{ after(grammarAccess.getStringOrAccess().getStringOrAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringOr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringOr__Group__1__Impl
	rule__StringOr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOrAccess().getOrKeyword_1()); }

	'or' 

{ after(grammarAccess.getStringOrAccess().getOrKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringOr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringOr__Group__2__Impl
	rule__StringOr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOrAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getStringOrAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringOr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringOr__Group__3__Impl
	rule__StringOr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOrAccess().getOptionAssignment_3()); }
(rule__StringOr__OptionAssignment_3)
{ after(grammarAccess.getStringOrAccess().getOptionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringOr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringOr__Group__4__Impl
	rule__StringOr__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOrAccess().getGroup_4()); }
(rule__StringOr__Group_4__0)*
{ after(grammarAccess.getStringOrAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringOr__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringOr__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOr__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOrAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getStringOrAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StringOr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringOr__Group_4__0__Impl
	rule__StringOr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOrAccess().getVerticalLineKeyword_4_0()); }

	'|' 

{ after(grammarAccess.getStringOrAccess().getVerticalLineKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringOr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringOr__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringOr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOrAccess().getOptionAssignment_4_1()); }
(rule__StringOr__OptionAssignment_4_1)
{ after(grammarAccess.getStringOrAccess().getOptionAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringDescriptionInVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDescriptionInVariable__Group__0__Impl
	rule__StringDescriptionInVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescriptionInVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionInVariableAccess().getNameAssignment_0()); }
(rule__StringDescriptionInVariable__NameAssignment_0)
{ after(grammarAccess.getStringDescriptionInVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDescriptionInVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDescriptionInVariable__Group__1__Impl
	rule__StringDescriptionInVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescriptionInVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionInVariableAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getStringDescriptionInVariableAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDescriptionInVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDescriptionInVariable__Group__2__Impl
	rule__StringDescriptionInVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescriptionInVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionInVariableAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getStringDescriptionInVariableAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDescriptionInVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDescriptionInVariable__Group__3__Impl
	rule__StringDescriptionInVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescriptionInVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionInVariableAccess().getDescriptionAssignment_3()); }
(rule__StringDescriptionInVariable__DescriptionAssignment_3)*
{ after(grammarAccess.getStringDescriptionInVariableAccess().getDescriptionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringDescriptionInVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringDescriptionInVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescriptionInVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionInVariableAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getStringDescriptionInVariableAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StringComplex__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringComplex__Group__0__Impl
	rule__StringComplex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComplex__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringComplexAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getStringComplexAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringComplex__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringComplex__Group__1__Impl
	rule__StringComplex__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComplex__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringComplexAccess().getDescriptionAssignment_1()); }
(rule__StringComplex__DescriptionAssignment_1)*
{ after(grammarAccess.getStringComplexAccess().getDescriptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringComplex__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringComplex__Group__2__Impl
	rule__StringComplex__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComplex__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringComplexAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getStringComplexAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringComplex__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringComplex__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringComplex__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringComplexAccess().getAlternatives_3()); }
(rule__StringComplex__Alternatives_3)
{ after(grammarAccess.getStringComplexAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ObjectDescription__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescription__Group__0__Impl
	rule__ObjectDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getNodeKeyword_0()); }

	'Node' 

{ after(grammarAccess.getObjectDescriptionAccess().getNodeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDescription__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescription__Group__1__Impl
	rule__ObjectDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getNameAssignment_1()); }
(rule__ObjectDescription__NameAssignment_1)
{ after(grammarAccess.getObjectDescriptionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDescription__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescription__Group__2__Impl
	rule__ObjectDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getObjectDescriptionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDescription__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescription__Group__3__Impl
	rule__ObjectDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getObjectDescriptionAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDescription__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescription__Group__4__Impl
	rule__ObjectDescription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getDescriptionAssignment_4()); }
(rule__ObjectDescription__DescriptionAssignment_4)*
{ after(grammarAccess.getObjectDescriptionAccess().getDescriptionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDescription__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescription__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getObjectDescriptionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ObjectDescriptionInner__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescriptionInner__Group__0__Impl
	rule__ObjectDescriptionInner__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescriptionInner__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getAlternatives_0()); }
(rule__ObjectDescriptionInner__Alternatives_0)
{ after(grammarAccess.getObjectDescriptionInnerAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectDescriptionInner__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectDescriptionInner__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescriptionInner__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionInnerAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getObjectDescriptionInnerAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group__0__Impl
	rule__ObjectAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getHasAttributeKeyword_0()); }

	'hasAttribute' 

{ after(grammarAccess.getObjectAttributeAccess().getHasAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group__1__Impl
	rule__ObjectAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getAttributesAssignment_1()); }
(rule__ObjectAttribute__AttributesAssignment_1)
{ after(grammarAccess.getObjectAttributeAccess().getAttributesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getGroup_2()); }
(rule__ObjectAttribute__Group_2__0)?
{ after(grammarAccess.getObjectAttributeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ObjectAttribute__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group_2__0__Impl
	rule__ObjectAttribute__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getAsKeyword_2_0()); }

	'as' 

{ after(grammarAccess.getObjectAttributeAccess().getAsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectAttribute__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectAttribute__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getStringMethodeAssignment_2_1()); }
(rule__ObjectAttribute__StringMethodeAssignment_2_1)
{ after(grammarAccess.getObjectAttributeAccess().getStringMethodeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNode__Group__0__Impl
	rule__ObjectNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNodeAccess().getHasNodeKeyword_0()); }

	'hasNode' 

{ after(grammarAccess.getObjectNodeAccess().getHasNodeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNode__Group__1__Impl
	rule__ObjectNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNodeAccess().getAttributesAssignment_1()); }
(rule__ObjectNode__AttributesAssignment_1)
{ after(grammarAccess.getObjectNodeAccess().getAttributesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectNode__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNode__Group__2__Impl
	rule__ObjectNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNode__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNodeAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getObjectNodeAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectNode__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNode__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNode__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNodeAccess().getInnerAssignment_3()); }
(rule__ObjectNode__InnerAssignment_3)
{ after(grammarAccess.getObjectNodeAccess().getInnerAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ObjectNext__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNext__Group__0__Impl
	rule__ObjectNext__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getHasNextKeyword_0()); }

	'hasNext' 

{ after(grammarAccess.getObjectNextAccess().getHasNextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectNext__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNext__Group__1__Impl
	rule__ObjectNext__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getAttributeAssignment_1()); }
(rule__ObjectNext__AttributeAssignment_1)
{ after(grammarAccess.getObjectNextAccess().getAttributeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectNext__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNext__Group__2__Impl
	rule__ObjectNext__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getObjectNextAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectNext__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectNext__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getObjectDesriptionAssignment_3()); }
(rule__ObjectNext__ObjectDesriptionAssignment_3)
{ after(grammarAccess.getObjectNextAccess().getObjectDesriptionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__JavaCodeOrID__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaCodeOrID__Group_0__0__Impl
	rule__JavaCodeOrID__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getJavaKeyword_0_0()); }

	'java' 

{ after(grammarAccess.getJavaCodeOrIDAccess().getJavaKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaCodeOrID__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaCodeOrID__Group_0__1__Impl
	rule__JavaCodeOrID__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getJavaCodeOrIDAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaCodeOrID__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaCodeOrID__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getCodeAssignment_0_2()); }
(rule__JavaCodeOrID__CodeAssignment_0_2)
{ after(grammarAccess.getJavaCodeOrIDAccess().getCodeAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ObjectMany__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMany__Group__0__Impl
	rule__ObjectMany__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMany__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectManyAccess().getOptionAssignment_0()); }
(rule__ObjectMany__OptionAssignment_0)
{ after(grammarAccess.getObjectManyAccess().getOptionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectMany__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMany__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMany__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectManyAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getObjectManyAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectChoice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectChoice__Group__0__Impl
	rule__ObjectChoice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectChoice__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectChoiceAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getObjectChoiceAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectChoice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectChoice__Group__1__Impl
	rule__ObjectChoice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectChoice__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectChoiceAccess().getOptionsAssignment_1()); }
(rule__ObjectChoice__OptionsAssignment_1)
{ after(grammarAccess.getObjectChoiceAccess().getOptionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectChoice__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectChoice__Group__2__Impl
	rule__ObjectChoice__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectChoice__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectChoiceAccess().getGroup_2()); }
(rule__ObjectChoice__Group_2__0)*
{ after(grammarAccess.getObjectChoiceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectChoice__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectChoice__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectChoice__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectChoiceAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getObjectChoiceAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ObjectChoice__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectChoice__Group_2__0__Impl
	rule__ObjectChoice__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectChoice__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectChoiceAccess().getVerticalLineKeyword_2_0()); }

	'|' 

{ after(grammarAccess.getObjectChoiceAccess().getVerticalLineKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectChoice__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectChoice__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectChoice__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectChoiceAccess().getOptionsAssignment_2_1()); }
(rule__ObjectChoice__OptionsAssignment_2_1)
{ after(grammarAccess.getObjectChoiceAccess().getOptionsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectMaybe__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMaybe__Group_1__0__Impl
	rule__ObjectMaybe__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getDescriptionAssignment_1_0()); }
(rule__ObjectMaybe__DescriptionAssignment_1_0)
{ after(grammarAccess.getObjectMaybeAccess().getDescriptionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectMaybe__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectMaybe__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getObjectMaybeAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__DTDSL__ParserNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getParserNameSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getDTDSLAccess().getParserNameSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__ObjDescriptionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getObjDescriptionAbstractParserRuleCall_4_0()); }
	ruleAbstract{ after(grammarAccess.getDTDSLAccess().getObjDescriptionAbstractParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DTDSL__StartAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDTDSLAccess().getStartStartPointParserRuleCall_5_0()); }
	ruleStartPoint{ after(grammarAccess.getDTDSLAccess().getStartStartPointParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__BeginAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getBeginObjectDescriptionCrossReference_0_2_0()); }
(
{ before(grammarAccess.getStartPointAccess().getBeginObjectDescriptionIDTerminalRuleCall_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getStartPointAccess().getBeginObjectDescriptionIDTerminalRuleCall_0_2_0_1()); }
)
{ after(grammarAccess.getStartPointAccess().getBeginObjectDescriptionCrossReference_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StartPoint__BeginAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartPointAccess().getBeginStringDescriptionCrossReference_1_0_0()); }
(
{ before(grammarAccess.getStartPointAccess().getBeginStringDescriptionIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getStartPointAccess().getBeginStringDescriptionIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getStartPointAccess().getBeginStringDescriptionCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescription__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStringDescriptionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescription__DescriptionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionAccess().getDescriptionStringDescriptionInnerParserRuleCall_4_0()); }
	ruleStringDescriptionInner{ after(grammarAccess.getStringDescriptionAccess().getDescriptionStringDescriptionInnerParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescriptionInner__KeyRefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionInnerAccess().getKeyRefStringKeyCrossReference_3_0()); }
(
{ before(grammarAccess.getStringDescriptionInnerAccess().getKeyRefStringKeyIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getStringDescriptionInnerAccess().getKeyRefStringKeyIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getStringDescriptionInnerAccess().getKeyRefStringKeyCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringOverRead__OverReadAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOverReadAccess().getOverReadSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringOverReadAccess().getOverReadSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringKey__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringKeyAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getStringKeyAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringKey__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringKeyAccess().getTypeTypeParserRuleCall_4_0()); }
	ruleType{ after(grammarAccess.getStringKeyAccess().getTypeTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getStringValueAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getTypeTypeParserRuleCall_4_0()); }
	ruleType{ after(grammarAccess.getStringValueAccess().getTypeTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ToKeyAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getToKeyStringKeyCrossReference_5_1_0()); }
(
{ before(grammarAccess.getStringValueAccess().getToKeyStringKeyIDTerminalRuleCall_5_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStringValueAccess().getToKeyStringKeyIDTerminalRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getStringValueAccess().getToKeyStringKeyCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringOr__OptionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOrAccess().getOptionStringDescriptionInVariableCrossReference_3_0()); }
(
{ before(grammarAccess.getStringOrAccess().getOptionStringDescriptionInVariableIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getStringOrAccess().getOptionStringDescriptionInVariableIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getStringOrAccess().getOptionStringDescriptionInVariableCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringOr__OptionAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringOrAccess().getOptionStringDescriptionInVariableCrossReference_4_1_0()); }
(
{ before(grammarAccess.getStringOrAccess().getOptionStringDescriptionInVariableIDTerminalRuleCall_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStringOrAccess().getOptionStringDescriptionInVariableIDTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getStringOrAccess().getOptionStringDescriptionInVariableCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescriptionInVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionInVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getStringDescriptionInVariableAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringDescriptionInVariable__DescriptionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringDescriptionInVariableAccess().getDescriptionStringDescriptionInnerParserRuleCall_3_0()); }
	ruleStringDescriptionInner{ after(grammarAccess.getStringDescriptionInVariableAccess().getDescriptionStringDescriptionInnerParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringComplex__DescriptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringComplexAccess().getDescriptionStringDescriptionInnerParserRuleCall_1_0()); }
	ruleStringDescriptionInner{ after(grammarAccess.getStringComplexAccess().getDescriptionStringDescriptionInnerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringComplex__ManyAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringComplexAccess().getManyAsteriskKeyword_3_0_0()); }
(
{ before(grammarAccess.getStringComplexAccess().getManyAsteriskKeyword_3_0_0()); }

	'*' 

{ after(grammarAccess.getStringComplexAccess().getManyAsteriskKeyword_3_0_0()); }
)

{ after(grammarAccess.getStringComplexAccess().getManyAsteriskKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringComplex__MaybeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringComplexAccess().getMaybeQuestionMarkKeyword_3_1_0()); }
(
{ before(grammarAccess.getStringComplexAccess().getMaybeQuestionMarkKeyword_3_1_0()); }

	'?' 

{ after(grammarAccess.getStringComplexAccess().getMaybeQuestionMarkKeyword_3_1_0()); }
)

{ after(grammarAccess.getStringComplexAccess().getMaybeQuestionMarkKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getObjectDescriptionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectDescription__DescriptionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectDescriptionAccess().getDescriptionObjectDescriptionInnerParserRuleCall_4_0()); }
	ruleObjectDescriptionInner{ after(grammarAccess.getObjectDescriptionAccess().getDescriptionObjectDescriptionInnerParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__AttributesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getAttributesIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getObjectAttributeAccess().getAttributesIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectAttribute__StringMethodeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAttributeAccess().getStringMethodeStringDescriptionCrossReference_2_1_0()); }
(
{ before(grammarAccess.getObjectAttributeAccess().getStringMethodeStringDescriptionIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getObjectAttributeAccess().getStringMethodeStringDescriptionIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getObjectAttributeAccess().getStringMethodeStringDescriptionCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNode__AttributesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNodeAccess().getAttributesIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getObjectNodeAccess().getAttributesIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNode__InnerAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNodeAccess().getInnerObjectDescriptionCrossReference_3_0()); }
(
{ before(grammarAccess.getObjectNodeAccess().getInnerObjectDescriptionIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getObjectNodeAccess().getInnerObjectDescriptionIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getObjectNodeAccess().getInnerObjectDescriptionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__AttributeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getAttributeJavaCodeOrIDParserRuleCall_1_0()); }
	ruleJavaCodeOrID{ after(grammarAccess.getObjectNextAccess().getAttributeJavaCodeOrIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectNext__ObjectDesriptionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectNextAccess().getObjectDesriptionObjectDescriptionCrossReference_3_0()); }
(
{ before(grammarAccess.getObjectNextAccess().getObjectDesriptionObjectDescriptionIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getObjectNextAccess().getObjectDesriptionObjectDescriptionIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getObjectNextAccess().getObjectDesriptionObjectDescriptionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__CodeAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getCodeSTRINGTerminalRuleCall_0_2_0()); }
	RULE_STRING{ after(grammarAccess.getJavaCodeOrIDAccess().getCodeSTRINGTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeOrID__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeOrIDAccess().getIdIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getJavaCodeOrIDAccess().getIdIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMany__OptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectManyAccess().getOptionObjectMaybeInnerParserRuleCall_0_0()); }
	ruleObjectMaybeInner{ after(grammarAccess.getObjectManyAccess().getOptionObjectMaybeInnerParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectChoice__OptionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectChoiceAccess().getOptionsObjectMaybeInnerParserRuleCall_1_0()); }
	ruleObjectMaybeInner{ after(grammarAccess.getObjectChoiceAccess().getOptionsObjectMaybeInnerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectChoice__OptionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectChoiceAccess().getOptionsObjectMaybeInnerParserRuleCall_2_1_0()); }
	ruleObjectMaybeInner{ after(grammarAccess.getObjectChoiceAccess().getOptionsObjectMaybeInnerParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__OptionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getOptionObjectDescriptionCrossReference_0_0()); }
(
{ before(grammarAccess.getObjectMaybeAccess().getOptionObjectDescriptionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getObjectMaybeAccess().getOptionObjectDescriptionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getObjectMaybeAccess().getOptionObjectDescriptionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectMaybe__DescriptionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectMaybeAccess().getDescriptionObjectMaybeInnerParserRuleCall_1_0_0()); }
	ruleObjectMaybeInner{ after(grammarAccess.getObjectMaybeAccess().getDescriptionObjectMaybeInnerParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


