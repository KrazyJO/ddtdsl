grammar de.wbg.DTDSL with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/xtext/common/JavaVMTypes" as jvmTypes

generate dTDSL "http://www.wbg.de/DTDSL"

DTDSL:
	'parserName' '=' parserName=STRING ';'
//	'parserType' '=' type=('javaObject' | 'string') ';'
	objDescription+=Abstract*
	start=StartPoint
;

StartPoint:
	'beginWith' '=' begin=[ObjectDescription] | begin=[StringDescription] ';'
;

Abstract:
	ObjectDescription | StringDescription //| ObjectHashMapDescription
;
//---------------------------  String  ---------------------------
StringDescription:
	'String' name=ID ':'  '{' description+=StringDescriptionInner* '}'
;

StringDescriptionInner:
//	rule+=StringRule+
	StringOverRead | StringKey | StringValue 
;

StringRule:
	StringOverRead | StringKey | StringValue
;

StringOverRead:
	STRING
;

StringKey:
	'Key'
;

StringValue:
	'Value'
;

//---------------------------  Object  ---------------------------
//ObjectHashMapDescription:
//	name=ID 'as' 'HashMap' ':' '{' description=ObjectHashMapDescriptionInner '}'
//;
//
//ObjectHashMapDescriptionInner:
//	
//;



ObjectDescription:
	'Node' name=ID ':' '{' description+=ObjectDescriptionInner* '}'
;

ObjectNodeType:
	'Node' | 'Attribute'
;

ObjectDescriptionInner:
	(ObjectNode | ObjectAttribute | ObjectNext | ObjectMaybe | ObjectMany | ObjectChoice) ';'
;

//ObjectAttribute:
//	'hasAttribute' attributes=ID 'ofType' types=Type 
//;

ObjectAttribute:
	'hasAttribute' attributes=ID ('as' stringMethode=[StringDescription] )? // 'ofType' types=[jvmTypes::JvmType | QualifiedName] 
;

QualifiedName: ID ('.' ID)*;

//ObjectAttribute:
//	'hasAttribute' attributes=ID 'ofType' (types=Type | inner=[ObjectDescription])
//;

//ObjectNode:
//	'hasNode' attributes=ID 'ofType' (types=Type 'as' keyword=Keyword | inner=[ObjectDescription]) ';'	
//;

ObjectNode:
	'hasNode' attributes=ID 'as' inner=[ObjectDescription]
;

ObjectNext:
	'hasNext' attribute=JavaCodeOrID 'as' objectDesription=[ObjectDescription]
;

JavaCodeOrID:
	('java' ':' code=STRING) | id=ID
;

//Type:
//  'boolean' | 'short' | 'int' | 'long' | 'float' | 'double' | 'char' | 'String'  | 'byte'
//;

ObjectMany:
	option=ObjectMaybeInner '*'	
;

ObjectChoice:
	'(' options+=ObjectMaybeInner ('|' options+=ObjectMaybeInner)* ')'
;

ObjectMaybe:
	option=[ObjectDescription] | description=ObjectMaybeInner '?'
;

ObjectMaybeInner:
	ObjectNext | ObjectNode | ObjectAttribute
;

Keyword:
	name='Key' | name='Value' | name=ID
;