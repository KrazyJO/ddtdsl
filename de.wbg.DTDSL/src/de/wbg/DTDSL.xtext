grammar de.wbg.DTDSL with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/xtext/common/JavaVMTypes" as jvmTypes

generate dTDSL "http://www.wbg.de/DTDSL"

DTDSL:
	'parserName' '=' parserName=STRING ';'
	objDescription+=Abstract*
	start=StartPoint
;

StartPoint:
	'beginWith' '=' begin=[ObjectDescription] | begin=[StringDescription] ';'
;

Abstract:
	ObjectDescription | StringDescription //| ObjectHashMapDescription
;
//---------------------------  String  ---------------------------
StringDescription:
	'String' name=ID ':'  '{' description+=StringDescriptionInner* '}'
;

StringDescriptionInner:
	StringOverRead | StringKey | StringValue  | keyRef=[StringKey] | StringComplex | StringOr | StringDescriptionInVariable
;

StringOverRead:
	overRead=STRING
;

StringKey:
	{StringKey}
	(name=ID '=')? 'Key' 'ofType' type=Type
;

StringValue:
	{StringValue}
	(name=ID '=')? 'Value' 'ofType' type=Type ('to' toKey=[StringKey])?
;

StringOr:
	{StringOr}
	'or' '(' (option+=[StringDescriptionInVariable]) ('|' option+=[StringDescriptionInVariable])* ')'
;

//StringDescriptionStore:
//	{StringDescriptionStore}
//	store+=StringDescriptionInner*
//;

StringDescriptionInVariable:
	name=ID ':' '=' description+=StringDescriptionInner* ';'
;

StringComplex:
	'(' description+=StringDescriptionInner* ')' (many='*' | maybe='?')
;

//---------------------------  Object  ---------------------------

ObjectDescription:
	'Node' name=ID ':' '{' description+=ObjectDescriptionInner* '}'
;

ObjectDescriptionInner:
	(ObjectNode | ObjectAttribute | ObjectNext | ObjectMaybe | ObjectMany | ObjectChoice) ';'
;

ObjectAttribute:
	'hasAttribute' attributes=ID ('as' stringMethode=[StringDescription] )? // 'ofType' types=[jvmTypes::JvmType | QualifiedName] 
;

ObjectNode:
	'hasNode' attributes=ID 'as' inner=[ObjectDescription]
;

ObjectNext:
	'hasNext' attribute=JavaCodeOrID 'as' objectDesription=[ObjectDescription]
;

JavaCodeOrID:
	('java' ':' code=STRING) | id=ID
;

Type:
  'boolean' | 'short' | 'int' | 'long' | 'float' | 'double' | 'char' | 'String'  | 'byte'
;

ObjectMany:
	option=ObjectMaybeInner '*'	
;

ObjectChoice:
	'(' options+=ObjectMaybeInner ('|' options+=ObjectMaybeInner)* ')'
;

ObjectMaybe:
	option=[ObjectDescription] | description=ObjectMaybeInner '?'
;

ObjectMaybeInner:
	ObjectNext | ObjectNode | ObjectAttribute
;