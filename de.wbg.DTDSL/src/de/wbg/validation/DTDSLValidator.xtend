/*
 * generated by Xtext
 */
package de.wbg.validation

import de.wbg.dTDSL.DTDSL
import de.wbg.dTDSL.DTDSLPackage
import de.wbg.dTDSL.ObjectDescription
import de.wbg.dTDSL.ObjectNext
import org.eclipse.xtext.validation.Check
import de.wbg.dTDSL.Abstract

//import org.eclipse.xtext.validation.Check

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class DTDSLValidator extends AbstractDTDSLValidator {

	//keine Leerzeichen im Parsernamen (error) und Parsername muss mit Großbuchstaben anfangen
	@Check
	def noParserNameWithSpaces(DTDSL model)
	{
		if (model.parserName.contains(" "))
		{
			error("Spaces in parser name are not allowed", DTDSLPackage.Literals.DTDSL__PARSER_NAME)
		}
		if (Character.isLowerCase(model.parserName.charAt(0)))
		{
			error("Parsername must begin with capital letter", DTDSLPackage.Literals.DTDSL__PARSER_NAME)
		}
	}
	
	//String und Node Description müssen unterschiedliche Namen haben (error)
	@Check
	def checkAbstractNames(Abstract a)
	{
		for (model: a.eResource.allContents.toIterable.filter(DTDSL))
		{
			for (abstract : model.objDescription) 
			{
				if (!a.equals(abstract))
				{
					if (a.name == abstract.name)
					{
						error("Object name has to be unique", DTDSLPackage.Literals.ABSTRACT__NAME)
					}
				}
				
			}
		}
	}

	//nur ein next innerhalb eines Objectes (error)
	@Check 
	def onlyOneNextInObjects(ObjectDescription d)
	{
		var counter = 0;
		for (i: d.description)
		{
			if (i instanceof ObjectNext)
			{
				counter++
				if (counter > 1)
				{
					error("Only one hasNext is allowed in an ObjectDescription", DTDSLPackage.Literals.ABSTRACT__NAME)
				}
			}
		}
		
	}
	
	//Objectname sollte mit Großbuchstaben anfangen (warning)
	@Check
	def objectNameShouldStartWithCapital(Abstract a)
	{
		if (Character.isLowerCase(a.name.charAt(0)))
		{
			warning("Object name should start with capital letter", DTDSLPackage.Literals.ABSTRACT__NAME)
		}
	}

}
