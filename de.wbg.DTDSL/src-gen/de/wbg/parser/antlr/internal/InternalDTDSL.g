/*
* generated by Xtext
*/
grammar InternalDTDSL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.wbg.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.wbg.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.wbg.services.DTDSLGrammarAccess;

}

@parser::members {

 	private DTDSLGrammarAccess grammarAccess;
 	
    public InternalDTDSLParser(TokenStream input, DTDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DTDSL";	
   	}
   	
   	@Override
   	protected DTDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDTDSL
entryRuleDTDSL returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDTDSLRule()); }
	 iv_ruleDTDSL=ruleDTDSL 
	 { $current=$iv_ruleDTDSL.current; } 
	 EOF 
;

// Rule DTDSL
ruleDTDSL returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='parserName' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDTDSLAccess().getParserNameKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDTDSLAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_parserName_2_0=RULE_STRING
		{
			newLeafNode(lv_parserName_2_0, grammarAccess.getDTDSLAccess().getParserNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDTDSLRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parserName",
        		lv_parserName_2_0, 
        		"STRING");
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDTDSLAccess().getSemicolonKeyword_3());
    }
	otherlv_4='parserType' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDTDSLAccess().getParserTypeKeyword_4());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDTDSLAccess().getEqualsSignKeyword_5());
    }
(
(
(
		lv_type_6_1=	'javaObject' 
    {
        newLeafNode(lv_type_6_1, grammarAccess.getDTDSLAccess().getTypeJavaObjectKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDTDSLRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_6_1, null);
	    }

    |		lv_type_6_2=	'string' 
    {
        newLeafNode(lv_type_6_2, grammarAccess.getDTDSLAccess().getTypeStringKeyword_6_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDTDSLRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_6_2, null);
	    }

)

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDTDSLAccess().getSemicolonKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDTDSLAccess().getObjDescriptionAbstractParserRuleCall_8_0()); 
	    }
		lv_objDescription_8_0=ruleAbstract		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDTDSLRule());
	        }
       		add(
       			$current, 
       			"objDescription",
        		lv_objDescription_8_0, 
        		"Abstract");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDTDSLAccess().getStartStartPointParserRuleCall_9_0()); 
	    }
		lv_start_9_0=ruleStartPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDTDSLRule());
	        }
       		set(
       			$current, 
       			"start",
        		lv_start_9_0, 
        		"StartPoint");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStartPoint
entryRuleStartPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStartPointRule()); }
	 iv_ruleStartPoint=ruleStartPoint 
	 { $current=$iv_ruleStartPoint.current; } 
	 EOF 
;

// Rule StartPoint
ruleStartPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='beginWith' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStartPointAccess().getBeginWithKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStartPointAccess().getEqualsSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStartPointRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getStartPointAccess().getBeginObjectDescriptionCrossReference_2_0()); 
	}

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStartPointAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleAbstract
entryRuleAbstract returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractRule()); }
	 iv_ruleAbstract=ruleAbstract 
	 { $current=$iv_ruleAbstract.current; } 
	 EOF 
;

// Rule Abstract
ruleAbstract returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractAccess().getObjectDescriptionParserRuleCall_0()); 
    }
    this_ObjectDescription_0=ruleObjectDescription
    { 
        $current = $this_ObjectDescription_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractAccess().getStringDescriptionParserRuleCall_1()); 
    }
    this_StringDescription_1=ruleStringDescription
    { 
        $current = $this_StringDescription_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStringDescription
entryRuleStringDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringDescriptionRule()); }
	 iv_ruleStringDescription=ruleStringDescription 
	 { $current=$iv_ruleStringDescription.current; } 
	 EOF 
;

// Rule StringDescription
ruleStringDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='String' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStringDescriptionAccess().getStringKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStringDescriptionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStringDescriptionAccess().getColonKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStringDescriptionAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStringDescriptionAccess().getRightCurlyBracketKeyword_4());
    }
)
;







// Entry rule entryRuleObjectDescription
entryRuleObjectDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectDescriptionRule()); }
	 iv_ruleObjectDescription=ruleObjectDescription 
	 { $current=$iv_ruleObjectDescription.current; } 
	 EOF 
;

// Rule ObjectDescription
ruleObjectDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Node' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getObjectDescriptionAccess().getNodeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getObjectDescriptionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectDescriptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getObjectDescriptionAccess().getColonKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getObjectDescriptionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectDescriptionAccess().getDescriptionObjectDescriptionInnerParserRuleCall_4_0()); 
	    }
		lv_description_4_0=ruleObjectDescriptionInner		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectDescriptionRule());
	        }
       		add(
       			$current, 
       			"description",
        		lv_description_4_0, 
        		"ObjectDescriptionInner");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getObjectDescriptionAccess().getRightCurlyBracketKeyword_5());
    }
)
;







// Entry rule entryRuleObjectDescriptionInner
entryRuleObjectDescriptionInner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectDescriptionInnerRule()); }
	 iv_ruleObjectDescriptionInner=ruleObjectDescriptionInner 
	 { $current=$iv_ruleObjectDescriptionInner.current; } 
	 EOF 
;

// Rule ObjectDescriptionInner
ruleObjectDescriptionInner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getObjectDescriptionInnerAccess().getObjectNodeParserRuleCall_0_0()); 
    }
    this_ObjectNode_0=ruleObjectNode
    { 
        $current = $this_ObjectNode_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObjectDescriptionInnerAccess().getObjectAttributeParserRuleCall_0_1()); 
    }
    this_ObjectAttribute_1=ruleObjectAttribute
    { 
        $current = $this_ObjectAttribute_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObjectDescriptionInnerAccess().getObjectNextParserRuleCall_0_2()); 
    }
    this_ObjectNext_2=ruleObjectNext
    { 
        $current = $this_ObjectNext_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObjectDescriptionInnerAccess().getObjectMaybeParserRuleCall_0_3()); 
    }
    this_ObjectMaybe_3=ruleObjectMaybe
    { 
        $current = $this_ObjectMaybe_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObjectDescriptionInnerAccess().getObjectManyParserRuleCall_0_4()); 
    }
    this_ObjectMany_4=ruleObjectMany
    { 
        $current = $this_ObjectMany_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObjectDescriptionInnerAccess().getObjectChoiceParserRuleCall_0_5()); 
    }
    this_ObjectChoice_5=ruleObjectChoice
    { 
        $current = $this_ObjectChoice_5.current; 
        afterParserOrEnumRuleCall();
    }
)	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getObjectDescriptionInnerAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleObjectAttribute
entryRuleObjectAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectAttributeRule()); }
	 iv_ruleObjectAttribute=ruleObjectAttribute 
	 { $current=$iv_ruleObjectAttribute.current; } 
	 EOF 
;

// Rule ObjectAttribute
ruleObjectAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='hasAttribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getObjectAttributeAccess().getHasAttributeKeyword_0());
    }
(
(
		lv_attributes_1_0=RULE_ID
		{
			newLeafNode(lv_attributes_1_0, grammarAccess.getObjectAttributeAccess().getAttributesIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"attributes",
        		lv_attributes_1_0, 
        		"ID");
	    }

)
))
;







// Entry rule entryRuleObjectNode
entryRuleObjectNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectNodeRule()); }
	 iv_ruleObjectNode=ruleObjectNode 
	 { $current=$iv_ruleObjectNode.current; } 
	 EOF 
;

// Rule ObjectNode
ruleObjectNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='hasNode' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getObjectNodeAccess().getHasNodeKeyword_0());
    }
(
(
		lv_attributes_1_0=RULE_ID
		{
			newLeafNode(lv_attributes_1_0, grammarAccess.getObjectNodeAccess().getAttributesIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectNodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"attributes",
        		lv_attributes_1_0, 
        		"ID");
	    }

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getObjectNodeAccess().getAsKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectNodeRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getObjectNodeAccess().getInnerObjectDescriptionCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleObjectNext
entryRuleObjectNext returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectNextRule()); }
	 iv_ruleObjectNext=ruleObjectNext 
	 { $current=$iv_ruleObjectNext.current; } 
	 EOF 
;

// Rule ObjectNext
ruleObjectNext returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='hasNext' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getObjectNextAccess().getHasNextKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectNextAccess().getAttributeJavaCodeOrIDParserRuleCall_1_0()); 
	    }
		lv_attribute_1_0=ruleJavaCodeOrID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectNextRule());
	        }
       		set(
       			$current, 
       			"attribute",
        		lv_attribute_1_0, 
        		"JavaCodeOrID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getObjectNextAccess().getAsKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectNextRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getObjectNextAccess().getObjectDesriptionObjectDescriptionCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleJavaCodeOrID
entryRuleJavaCodeOrID returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJavaCodeOrIDRule()); }
	 iv_ruleJavaCodeOrID=ruleJavaCodeOrID 
	 { $current=$iv_ruleJavaCodeOrID.current; } 
	 EOF 
;

// Rule JavaCodeOrID
ruleJavaCodeOrID returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='java' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJavaCodeOrIDAccess().getJavaKeyword_0_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJavaCodeOrIDAccess().getColonKeyword_0_1());
    }
(
(
		lv_code_2_0=RULE_STRING
		{
			newLeafNode(lv_code_2_0, grammarAccess.getJavaCodeOrIDAccess().getCodeSTRINGTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJavaCodeOrIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"code",
        		lv_code_2_0, 
        		"STRING");
	    }

)
))
    |(
(
		lv_id_3_0=RULE_ID
		{
			newLeafNode(lv_id_3_0, grammarAccess.getJavaCodeOrIDAccess().getIdIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJavaCodeOrIDRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleObjectMany
entryRuleObjectMany returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectManyRule()); }
	 iv_ruleObjectMany=ruleObjectMany 
	 { $current=$iv_ruleObjectMany.current; } 
	 EOF 
;

// Rule ObjectMany
ruleObjectMany returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getObjectManyAccess().getOptionObjectMaybeInnerParserRuleCall_0_0()); 
	    }
		lv_option_0_0=ruleObjectMaybeInner		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectManyRule());
	        }
       		set(
       			$current, 
       			"option",
        		lv_option_0_0, 
        		"ObjectMaybeInner");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='*' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getObjectManyAccess().getAsteriskKeyword_1());
    }
)
;





// Entry rule entryRuleObjectChoice
entryRuleObjectChoice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectChoiceRule()); }
	 iv_ruleObjectChoice=ruleObjectChoice 
	 { $current=$iv_ruleObjectChoice.current; } 
	 EOF 
;

// Rule ObjectChoice
ruleObjectChoice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getObjectChoiceAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectChoiceAccess().getOptionsObjectMaybeInnerParserRuleCall_1_0()); 
	    }
		lv_options_1_0=ruleObjectMaybeInner		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectChoiceRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_1_0, 
        		"ObjectMaybeInner");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getObjectChoiceAccess().getVerticalLineKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectChoiceAccess().getOptionsObjectMaybeInnerParserRuleCall_2_1_0()); 
	    }
		lv_options_3_0=ruleObjectMaybeInner		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectChoiceRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_3_0, 
        		"ObjectMaybeInner");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getObjectChoiceAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleObjectMaybe
entryRuleObjectMaybe returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectMaybeRule()); }
	 iv_ruleObjectMaybe=ruleObjectMaybe 
	 { $current=$iv_ruleObjectMaybe.current; } 
	 EOF 
;

// Rule ObjectMaybe
ruleObjectMaybe returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectMaybeRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getObjectMaybeAccess().getOptionObjectDescriptionCrossReference_0_0()); 
	}

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getObjectMaybeAccess().getDescriptionObjectMaybeInnerParserRuleCall_1_0_0()); 
	    }
		lv_description_1_0=ruleObjectMaybeInner		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectMaybeRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_1_0, 
        		"ObjectMaybeInner");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='?' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getObjectMaybeAccess().getQuestionMarkKeyword_1_1());
    }
))
;





// Entry rule entryRuleObjectMaybeInner
entryRuleObjectMaybeInner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectMaybeInnerRule()); }
	 iv_ruleObjectMaybeInner=ruleObjectMaybeInner 
	 { $current=$iv_ruleObjectMaybeInner.current; } 
	 EOF 
;

// Rule ObjectMaybeInner
ruleObjectMaybeInner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getObjectMaybeInnerAccess().getObjectNextParserRuleCall_0()); 
    }
    this_ObjectNext_0=ruleObjectNext
    { 
        $current = $this_ObjectNext_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObjectMaybeInnerAccess().getObjectNodeParserRuleCall_1()); 
    }
    this_ObjectNode_1=ruleObjectNode
    { 
        $current = $this_ObjectNode_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getObjectMaybeInnerAccess().getObjectAttributeParserRuleCall_2()); 
    }
    this_ObjectAttribute_2=ruleObjectAttribute
    { 
        $current = $this_ObjectAttribute_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;







RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


